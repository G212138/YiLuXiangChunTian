{"version":3,"sources":["assets\\frame\\scripts\\Utils\\HitTest.ts"],"names":[],"mappings":";;;;;;;AAAA;IAAA;IAyEA,CAAC;IAxEG;;;;OAIG;IACW,iBAAS,GAAvB,UAAwB,GAAY,EAAE,IAAa;QAC/C,IAAI,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,qBAAqB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QACzD,IAAI,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;QAC5D,IAAI,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;QAC5D,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,IAAI,GAAG,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,IAAI,GAAG,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,IAAI,GAAG,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;QACzE,OAAO,CAAC,CAAC;IACb,CAAC;IAED;;;;;;OAMG;IACW,kBAAU,GAAxB,UAAyB,IAAa,EAAE,MAAiB,EAAE,QAAyB;QAAzB,yBAAA,EAAA,gBAAyB;QAChF,IAAI,QAAQ,EAAE;YACV,IAAI,GAAG,GAAG,MAAM,CAAC,WAAW,CAAC;YAC7B,IAAI,GAAG,GAAG,MAAM,CAAC,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,CAAC;YACjD,IAAI,MAAM,CAAC,IAAI,CAAC,OAAO,IAAI,CAAC,IAAI,MAAM,CAAC,IAAI,CAAC,OAAO,IAAI,CAAC,EAAE;gBACtD,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;aAClB;iBAAM,IAAI,MAAM,CAAC,IAAI,CAAC,OAAO,IAAI,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,OAAO,IAAI,GAAG,EAAE;gBACjE,IAAI,CAAC,GAAG,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC;gBAC1B,IAAI,CAAC,GAAG,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC;gBAC3B,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;gBACtB,IAAI,GAAG,CAAC,CAAC,GAAG,CAAC,EAAE;oBACX,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;iBACzB;qBAAM;oBACH,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;iBACnC;aACJ;YACD,IAAI,GAAG,GAAG,GAAG,CAAC,UAAU,EAAE,CAAC;YAC3B,IAAI,GAAG,GAAG,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;YAC3C,IAAI,GAAG,GAAG,GAAG,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;YAC/B,GAAG,CAAC,KAAK,GAAG,GAAG,CAAC,KAAK,CAAC;YACtB,GAAG,CAAC,MAAM,GAAG,GAAG,CAAC,MAAM,CAAC;YACxB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,iBAAiB,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC,KAAK,EAAE,GAAG,CAAC,MAAM,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC,KAAK,GAAG,CAAC,EAAE,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;YACzG,IAAI,GAAG,GAAG,GAAG,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;YAC/B,IAAI,IAAI,GAAG,GAAG,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC;YACrD,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YAElB,OAAO,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;SACvB;aAAM;YACH,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC;SACrC;IACL,CAAC;IAED;;OAEG;IACW,qBAAa,GAA3B,UAA4B,KAAc,EAAE,OAAkB;QAC1D,IAAI,CAAC,GAAG,KAAK,CAAC;QACd,IAAI,EAAE,GAAG,CAAC,CAAC;QACX,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;YAChD,IAAI,EAAE,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC;YACpB,IAAI,EAAE,GAAG,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;YACxB,IAAI,CAAC,EAAE,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,EAAE;gBAC1E,IAAI,EAAE,GAAG,CAAC,KAAK,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;gBAC1C,IAAI,KAAK,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,EAAE;oBACrC,EAAE,EAAE,CAAC;iBACR;aACJ;SACJ;QACD,4CAA4C;QAC5C,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;QAChB,OAAO,CAAC,CAAC;IACb,CAAC;IACL,cAAC;AAAD,CAzEA,AAyEC,IAAA;AAzEY,0BAAO","file":"","sourceRoot":"/","sourcesContent":["export class HitTest {\n    /**\n     * 点是否在图形内\n     * @param pos 世界坐标\n     * @param rect 碰撞节点\n     */\n    public static posInRect(pos: cc.Vec2, rect: cc.Node): boolean {\n        let p = rect.parent.convertToWorldSpaceAR(rect.position);\n        let lb = cc.v2(p.x - rect.width / 2, p.y - rect.height / 2);\n        let rt = cc.v2(p.x + rect.width / 2, p.y + rect.height / 2);\n        let b = pos.x >= lb.x && pos.y >= lb.y && pos.x <= rt.x && pos.y <= rt.y;\n        return b;\n    }\n\n    /**\n     * 图形点击检测, 锚点必须为左上角，或者中心。\n     * 所检测的图片不可打包图集\n     * @param posw 点击的世界坐标\n     * @param sprite 点击的图片\n     * @param accurate 是否开始像素精确判定\n     */\n    public static imgHitTest(posw: cc.Vec2, sprite: cc.Sprite, accurate: boolean = false): boolean {\n        if (accurate) {\n            let spf = sprite.spriteFrame;\n            let pos = sprite.node.convertToNodeSpaceAR(posw);\n            if (sprite.node.anchorX == 0 && sprite.node.anchorY == 1) {\n                pos.y = -pos.y;\n            } else if (sprite.node.anchorX == 0.5 && sprite.node.anchorY == 0.5) {\n                let w = sprite.node.width;\n                let h = sprite.node.height;\n                pos.x = w / 2 + pos.x;\n                if (pos.y > 0) {\n                    pos.y = h / 2 - pos.y;\n                } else {\n                    pos.y = h / 2 + Math.abs(pos.y);\n                }\n            }\n            let tex = spf.getTexture();\n            let cvs = document.createElement('canvas');\n            var ctx = cvs.getContext('2d');\n            cvs.width = tex.width;\n            cvs.height = tex.height;\n            ctx.drawImage(tex.getHtmlElementObj(), 0, 0, tex.width, tex.height, 0, 0, tex.width / 1, tex.height / 1);\n            var ctx = cvs.getContext('2d');\n            let data = ctx.getImageData(pos.x, pos.y, 1, 1).data;\n            console.log(data);\n\n            return data[3] != 0;\n        } else {\n            this.posInRect(posw, sprite.node);\n        }\n    }\n\n    /**\n     * 点是否在多边形内\n     */\n    public static polygonInside(point: cc.Vec2, polygon: cc.Vec2[]): boolean {\n        let b = false;\n        let cn = 0;\n        for (let i = 0, l = polygon.length - 1; i < l; i++) {\n            let p1 = polygon[i];\n            let p2 = polygon[i + 1];\n            if ((p1.y < point.y && p2.y > point.y) || (p1.y > point.y && p2.y < point.y)) {\n                let vt = (point.y - p1.y) / (p2.y - p1.y);\n                if (point.x < p1.x + vt * (p2.x - p1.x)) {\n                    ++cn;\n                }\n            }\n        }\n        // 判断交点个数是奇数还是偶数，奇数在图内，偶数在图外，如果有特殊图形，则需要特殊判断\n        b = cn % 2 == 1;\n        return b;\n    }\n}\n"]}