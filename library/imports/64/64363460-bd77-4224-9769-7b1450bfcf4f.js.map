{"version":3,"sources":["assets\\game\\scripts\\Manager\\EditorManager.ts"],"names":[],"mappings":";;;;;AAAA,YAAY;;;AAEZ;;GAEG;AACH;IAAA;QACI,UAAU;QACH,gBAAW,GAAY,IAAI,CAAC;QACnC,WAAW;QACJ,aAAQ,GAAY,IAAI,CAAC;QAChC,aAAa;QACN,gBAAW,GAAY,IAAI,CAAC;QACnC,QAAQ;QACD,gBAAW,GAAW,CAAC,CAAC;QAC/B,OAAO;QACA,eAAU,GAAW,CAAC,CAAC;QAC9B,MAAM;QACC,cAAS,GAAW,CAAC,CAAC;QAC7B,wBAAwB;QACjB,oBAAe,GAAW,CAAC,CAAC;QAEnC,aAAa;QACN,cAAS,GAAW,CAAC,CAAC;IACjC,CAAC;IAAD,iBAAC;AAAD,CAlBA,AAkBC,IAAA;AAED;IAaI;QAHA,YAAY;QACL,eAAU,GAAe,IAAI,UAAU,EAAE,CAAC;IAElC,CAAC;IAVT,8BAAW,GAAlB;QACI,IAAI,IAAI,CAAC,SAAS,IAAI,IAAI,EAAE;YACxB,IAAI,CAAC,SAAS,GAAG,IAAI,kBAAkB,EAAE,CAAC;SAC7C;QACD,OAAO,IAAI,CAAC,SAAS,CAAC;IAC1B,CAAC;IAOD;;OAEG;IACI,0CAAa,GAApB;QACI,IAAI,IAAI,GAAG,MAAM,CAAC,mBAAmB,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QAEvD,OAAO,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;IAC3B,CAAC;IAED;;OAEG;IACI,0CAAa,GAApB;QACI,OAAO,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC;IACtC,CAAC;IAED;;OAEG;IACI,0CAAa,GAApB,UAAqB,GAAW;QAC5B,IAAI,CAAC,UAAU,CAAC,UAAU,GAAG,GAAG,CAAC;IACrC,CAAC;IAED;;OAEG;IACI,yCAAY,GAAnB;QACI,OAAO,IAAI,CAAC,UAAU,CAAC,SAAS,IAAI,IAAI,CAAC,aAAa,EAAE,CAAC;IAC7D,CAAC;IAED;;OAEG;IACI,yCAAY,GAAnB,UAAoB,GAAW;QAC3B,IAAI,CAAC,UAAU,CAAC,SAAS,GAAG,GAAG,CAAC;IACpC,CAAC;IAED;;;;OAIG;IACI,+CAAkB,GAAzB;QACI,OAAO,IAAI,CAAC,UAAU,CAAC,eAAe,CAAC;IAC3C,CAAC;IAED;;OAEG;IACI,oCAAO,GAAd;QACI,OAAO,IAAI,CAAC,UAAU,CAAC;IAC3B,CAAC;IAED;;;OAGG;IACI,oCAAO,GAAd,UAAe,IAAgB;QAC3B,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;IAC3B,CAAC;IACL,yBAAC;AAAD,CA3EA,AA2EC,IAAA;AAEY,QAAA,aAAa,GAAG,kBAAkB,CAAC,WAAW,EAAE,CAAC","file":"","sourceRoot":"/","sourcesContent":["/**编辑器数据类 */\n\n/**\n * 编辑器数据，根据游戏自定义内部数据\n */\nclass EditorData {\n    // 是否开启星级评\n    public isStarCount: boolean = true;\n    // 是否开启再玩一次\n    public isReplay: boolean = true;\n    // 是否自动播放题干语音\n    public isPlayTitle: boolean = true;\n    // 可重玩次数\n    public replayCount: number = 1;\n    // 关卡总数\n    public levelCount: number = 1;\n    // 总步数\n    public stepCount: number = 0;\n    // 课件等级 0：幼小  1：小低  2：小高\n    public coursewareLevel: number = 2;\n\n    // TODO 自定义数据\n    public gameIndex: number = 0;\n}\n\nclass EditorManagerClass {\n    private static _instance: EditorManagerClass;\n\n    static getInstance() {\n        if (this._instance == null) {\n            this._instance = new EditorManagerClass();\n        }\n        return this._instance;\n    }\n\n    /** 编辑器数据 */\n    public editorData: EditorData = new EditorData();\n\n    constructor() {}\n\n    /**\n     * 是否支持题目编辑\n     */\n    public isSupportEdit(): boolean {\n        let keys = Object.getOwnPropertyNames(this.editorData);\n\n        return keys.length > 7;\n    }\n\n    /**\n     * 获取关卡总数\n     */\n    public getLevelCount() {\n        return this.editorData.levelCount;\n    }\n\n    /**\n     * 设置关卡总数\n     */\n    public setLevelCount(num: number) {\n        this.editorData.levelCount = num;\n    }\n\n    /**\n     * 获取总步数\n     */\n    public getStepCount() {\n        return this.editorData.stepCount || this.getLevelCount();\n    }\n\n    /**\n     * 设置总步数\n     */\n    public setStepCount(num: number) {\n        this.editorData.stepCount = num;\n    }\n\n    /**\n     * 获取课件等级\n     * 需要各个游戏根据实际情况设置正确的数值\n     * 课件等级 0：幼小  1：小低  2：小高\n     */\n    public getCoursewareLevel() {\n        return this.editorData.coursewareLevel;\n    }\n\n    /**\n     * 获取编辑器数据\n     */\n    public getData(): EditorData {\n        return this.editorData;\n    }\n\n    /**\n     * 根据网络请求结果设置编辑器数据\n     * @param {EditorData} data\n     */\n    public setData(data: EditorData) {\n        this.editorData = data;\n    }\n}\n\nexport const EditorManager = EditorManagerClass.getInstance();\n"]}