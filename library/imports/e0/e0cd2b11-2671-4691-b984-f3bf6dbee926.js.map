{"version":3,"sources":["assets\\frame\\scripts\\Manager\\SoundManager.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import { FrameConstValue } from '../Data/FrameConstValue';\nimport { FrameMsgType } from '../Data/FrameMsgType';\nimport { NetWork } from '../Http/NetWork';\nimport GameMsg from '../SDK/GameMsg';\nimport { ListenerManager } from './ListenerManager';\nimport { UIManager } from './UIManager';\n\n/** 音乐的资源名称枚举 */\nexport enum MusicType {\n    /** 背景音乐 */\n    BGM_MUSIC = 'BGM_MUSIC',\n    /** 题干语音 */\n    TITLE_AUDIO = 'TITLE_AUDIO',\n    /** 音效 */\n    GAME_EFFECT = 'GAME_EFFECT',\n    /** 语音 */\n    GAME_AUDIO = 'GAME_AUDIO',\n}\n\nclass SoundManagerClass {\n    private static _instance: SoundManagerClass = null;\n    private playing_sound: Object = new Object();\n    // 缓存背景音乐名字\n    private bgm: string = '';\n    private bgmIndex: number = -1;\n    // 语音列表\n    private _audioList: Map<string, number> = new Map();\n    // 音效列表\n    private _effectList: Map<string, number> = new Map();\n    // 音效统一的引用计数\n    private _referenceList: Map<string, number> = new Map();\n    // 题干语音\n    private _titleID: number = null;\n    /** 存放音频资源的 Map */\n    public _audioClipMap: Map<string, cc.AudioClip> = new Map();\n\n    public MUSIC_BGM = 'bgm';\n    public AUDIO_TITLE = 'audio_sound';\n\n    start() {\n        GameMsg.addEvent(FrameMsgType.PLAYBGM, this.playBGM.bind(this));\n        GameMsg.addEvent(FrameMsgType.RESUMEBGM, this.resumeBGM.bind(this));\n        GameMsg.addEvent(FrameMsgType.STOPBGM, this.stopBGM.bind(this));\n        GameMsg.addEvent(FrameMsgType.PLAYAUDIOTITLE, this.playAudioTitle.bind(this));\n        GameMsg.addEvent(FrameMsgType.STOPAUDIOTITLE, this.stopAudioTitle.bind(this));\n        GameMsg.addEvent(FrameMsgType.STOPALLAUDIO, this.stopAllAudio.bind(this));\n        GameMsg.addEvent(FrameMsgType.STOPALLEFFECT, this.stopAllEffect.bind(this));\n        GameMsg.addEvent(FrameMsgType.STOPALL, this.stopAll.bind(this));\n    }\n\n    public static getInstance(): SoundManagerClass {\n        if (null === this._instance) {\n            this._instance = new SoundManagerClass();\n        }\n        return this._instance;\n    }\n\n    // 获取音频资源\n    public getAudioClip(clipName: string): cc.AudioClip {\n        if (!this._audioClipMap.has(clipName)) {\n            cc.log(`未缓存的音频资源: ${clipName}`);\n            return null;\n        } else {\n            return this._audioClipMap.get(clipName);\n        }\n    }\n\n    // 加载resource里的音效资源\n    public preLoadResAudio(callback: (isCompleted: boolean) => void) {\n        let path = FrameConstValue.GAME_AUDIO_DIR;\n        cc.resources.loadDir(path, cc.AudioClip, (error, audioClips: cc.AudioClip[]) => {\n            // 错误处理\n            if (error) {\n                cc.error(error);\n                callback(false);\n                return;\n            }\n            // 获取完毕后装入 Map\n            audioClips.forEach((ele) => {\n                // cc.log('缓存完毕! ele.name == ' + ele.name);\n                this._audioClipMap.set(ele.name, ele);\n                this._referenceList.set(ele.name, 0);\n            });\n            // 执行回调返回进度\n            callback(true);\n        });\n    }\n\n    // 加载frameRes里的音效资源\n    public preLoadFrameAudio(callback: (isCompleted: boolean) => void) {\n        let path = FrameConstValue.FRAME_AUDIO_DIR;\n        cc.assetManager.loadBundle('frameRes', (err: Error, bundle: cc.AssetManager.Bundle) => {\n            if (err) {\n                cc.error(err);\n                callback(false);\n                return;\n            }\n            bundle.loadDir(path, cc.AudioClip, (error: Error, audioClips: cc.AudioClip[]) => {\n                if (error) {\n                    cc.error(error);\n                    callback(false);\n                    return;\n                }\n                audioClips.forEach((ele) => {\n                    // cc.log('缓存完毕! ele.name == ' + ele.name);\n                    this._audioClipMap.set(ele.name, ele);\n                    this._referenceList.set(ele.name, 0);\n                });\n                callback(true);\n            });\n        });\n    }\n\n    // 缓存所有音频资源\n    public preLoadAllAudioClips(callback: (isCompleted: boolean) => void) {\n        /** 加载代码，参数为 url，资源类型，进度回调，完成回调 */\n        let isCompletedLoadResAudio = false;\n        let isCompletedLoadFrameAudio = false;\n        this.preLoadResAudio((isCompleted: boolean) => {\n            if (isCompleted) {\n                cc.log('缓存完毕! preLoadResAudio ');\n            }\n            isCompletedLoadResAudio = true;\n            if (isCompletedLoadResAudio && isCompletedLoadFrameAudio) {\n                callback(true);\n            }\n        });\n\n        this.preLoadFrameAudio((isCompleted: boolean) => {\n            if (isCompleted) {\n                cc.log('缓存完毕! preLoadFrameAudio ');\n            }\n            isCompletedLoadFrameAudio = true;\n            if (isCompletedLoadResAudio && isCompletedLoadFrameAudio) {\n                callback(true);\n            }\n        });\n    }\n\n    // 单独缓存某一个音频\n    public preloadAudioClipName(clipName: string, callback: () => void) {\n        let path = FrameConstValue.GAME_AUDIO_DIR + clipName;\n        cc.log('preloadAudioClipName path == ' + path);\n        cc.resources.load(path, cc.AudioClip, (error, asset: cc.Asset) => {\n            if (error) {\n                cc.error(error);\n                return;\n            }\n            let clip = asset as cc.AudioClip;\n            this._audioClipMap.set(clipName, clip);\n            this._referenceList.set(clipName, 0);\n            cc.log('缓存完毕!');\n            callback();\n        });\n    }\n\n    /**\n     * 播放背景音乐\n     * @param soundName 背景音乐文件名\n     */\n    public playBGM(soundName: string = '') {\n        if (!UIManager.isGameShowing) {\n            cc.warn(`不要在GamePanel的onLoad和start里播放音频！`);\n            return;\n        }\n\n        if (NetWork.channel == 'blackboard' || Boolean(NetWork.isSync)) {\n            return;\n        }\n        if (soundName == '') {\n            soundName = this.MUSIC_BGM;\n        }\n\n        this.bgm = soundName;\n        this.bgmIndex = -1;\n        cc.audioEngine.stopMusic();\n        let path = FrameConstValue.GAME_AUDIO_DIR + soundName;\n        cc.resources.load(path, cc.AudioClip, (err, asset) => {\n            if (err) {\n                cc.error(err);\n                return;\n            }\n            let clip = asset as cc.AudioClip;\n            this.bgmIndex = cc.audioEngine.playMusic(clip, true);\n        });\n    }\n\n    //重新开始播放背景音乐\n    public resumeBGM() {\n        cc.audioEngine.stopMusic();\n        let path = FrameConstValue.GAME_AUDIO_DIR + this.bgm;\n        cc.resources.load(path, cc.AudioClip, (err, asset) => {\n            if (err) {\n                cc.error(err);\n                return;\n            }\n            let clip = asset as cc.AudioClip;\n            cc.audioEngine.playMusic(clip, true);\n        });\n    }\n\n    // 重新开始播放背景音乐\n    public stopBGM() {\n        this.bgm = '';\n        this.bgmIndex = -1;\n        cc.audioEngine.stopMusic();\n    }\n\n    // 设置背景音音量\n    public setMusicVolume(volume: number, tweenDur = 0) {\n        if (this.bgmIndex != -1) {\n            volume = cc.misc.clamp01(volume);\n            if (tweenDur == 0) {\n                cc.audioEngine.setVolume(this.bgmIndex, volume);\n            } else {\n                let obj = { v: cc.audioEngine.getVolume(this.bgmIndex) };\n                cc.tween(obj)\n                    .to(\n                        tweenDur,\n                        { v: volume },\n                        {\n                            progress: (start, end, current, ratio) => {\n                                let v = start + (end - start) * ratio;\n                                cc.audioEngine.setVolume(this.bgmIndex, v);\n                            },\n                        },\n                    )\n                    .start();\n            }\n        }\n    }\n\n    /**\n     * 播放题干语音\n     *\n     * @param {string} clipName 语音clip文件\n     * @param {boolean} bLoop 是否循环\n     * @param {boolean} [bInterupt=true] 是否打断其他语音,默认true\n     * @param {boolean} [bMutex=false] 是否互斥（指音效和语音）,默认false\n     * @memberof SoundManagerClass\n     */\n    public playAudioTitle(\n        clipName: string | cc.AudioClip,\n        bLoop: boolean = false,\n        bInterupt: boolean = true,\n        bMutex: boolean = false,\n        endCb: Function = null,\n    ) {\n        // if (clipName == '') {\n        //     clipName = this.AUDIO_TITLE;\n        // }\n        this.playAudio(clipName, bLoop, bInterupt, bMutex, endCb, true);\n    }\n\n    // ting zhi\n    public stopAudioTitle() {\n        this._audioList.forEach((value, key) => {\n            // cc.log(\"this._audioList value == \"+value)\n            // cc.log(\"this._audioList key == \"+key)\n            if (null != this._titleID && this._titleID === value) {\n                this._audioList.delete(key);\n                cc.audioEngine.stopEffect(value);\n            }\n        });\n        this._titleID = null;\n        // 题干语音播放完回调\n        ListenerManager.dispatch(FrameMsgType.COMPLETE_TRUMPET);\n    }\n    /**\n     * 播放语音\n     *\n     * @param {string} clipName 语音clip文件\n     * @param {boolean} bLoop 是否循环\n     * @param {boolean} [bInterupt=true] 是否打断其他语音,默认true\n     * @param {boolean} [bMutex=false] 是否互斥（指音效和语音）,默认false\n     * @memberof SoundManagerClass\n     */\n\n    public playAudio(\n        clipName: string | cc.AudioClip,\n        bLoop: boolean,\n        bInterupt: boolean = true,\n        bMutex: boolean = false,\n        onFinished: Function = null,\n        isTitleAudio: boolean = false,\n    ) {\n        if (!UIManager.isGameShowing) {\n            cc.warn(`不要在GamePanel的onLoad和start里播放音频！`);\n            return;\n        }\n\n        if (!clipName) return;\n\n        bInterupt && this.stopAllAudio();\n        bMutex && this.stopAllEffect();\n\n        let clip = null;\n\n        if (typeof clipName === 'string') {\n            clip = this.getAudioClip(clipName);\n            if (clip == null) {\n                SoundManager.preloadAudioClipName(\n                    clipName,\n                    function () {\n                        clip = this._audioClipMap.get(clipName);\n                        this.playAudio(clip, bLoop, bInterupt, bMutex, onFinished, isTitleAudio);\n                    }.bind(this),\n                );\n                return;\n            }\n        } else {\n            clip = clipName;\n        }\n\n        let id = cc.audioEngine.playEffect(clip, bLoop);\n        // 赋值titleId\n        if (isTitleAudio) {\n            this._titleID = id;\n            cc.log('this._titleID == ' + this._titleID);\n        }\n        this._audioList.set(clip.name, id);\n        //播放引用计数加1\n        let referenceCount = this._referenceList.get(clip.name);\n        this._referenceList.set(clip.name, referenceCount++);\n        cc.audioEngine.setFinishCallback(id, () => {\n            //引用计数为0删除资源\n            let referenceCount = this._referenceList.get(clip.name);\n            if (referenceCount-- <= 0) {\n                this.stopSoundByName(clip.name);\n            }\n            this._referenceList.set(clip.name, referenceCount < 0 ? 0 : referenceCount);\n            setTimeout(() => {\n                onFinished && onFinished();\n            }, 100);\n        });\n    }\n    /**\n     * 播放音效\n     *\n     * @param {string} clipName 音效clip文件\n     * @param {boolean} bLoop 是否循环\n     * @param {boolean} [bInterupt=true] 是否打断其他音效,默认true\n     * @param {boolean} [bMutex=false] 是否互斥（指音效和语音）,默认false\n     * @memberof SoundManagerClass\n     */\n\n    public playEffect(\n        clipName: string | cc.AudioClip,\n        bLoop: boolean,\n        bInterupt: boolean = true,\n        bMutex: boolean = false,\n        onFinished: Function = null,\n    ) {\n        if (!UIManager.isGameShowing) {\n            cc.warn(`不要在GamePanel的onLoad和start里播放音频！`);\n            return;\n        }\n\n        if (!clipName) return;\n\n        bInterupt && this.stopAllEffect();\n        bMutex && this.stopAllAudio();\n\n        let clip = null;\n\n        if (typeof clipName === 'string') {\n            clip = this.getAudioClip(clipName);\n            if (clip == null) {\n                SoundManager.preloadAudioClipName(\n                    clipName,\n                    function () {\n                        clip = this._audioClipMap.get(clipName);\n                        this.playEffect(clip, bLoop, bInterupt, bMutex, onFinished);\n                    }.bind(this),\n                );\n                return;\n            }\n        } else {\n            clip = clipName;\n        }\n\n        let id = cc.audioEngine.playEffect(clip, bLoop);\n        this._effectList.set(clip.name, id);\n        //播放引用计数加1\n        let referenceCount = this._referenceList.get(clip.name);\n        this._referenceList.set(clip.name, referenceCount++);\n        cc.audioEngine.setFinishCallback(id, () => {\n            //引用计数为0删除资源\n            let referenceCount = this._referenceList.get(clip.name);\n            if (referenceCount-- <= 0) {\n                this.stopSoundByName(clip.name);\n            }\n            this._referenceList.set(clip.name, referenceCount < 0 ? 0 : referenceCount);\n            setTimeout(() => {\n                onFinished && onFinished();\n            }, 100);\n        });\n    }\n\n    // 设置音效大小\n    public setEffectVolume(volume: number) {\n        volume = cc.misc.clamp01(volume);\n        this._audioList.forEach((value, key) => {\n            cc.audioEngine.setVolume(value, volume);\n        });\n    }\n\n    // 停止语音\n    public stopAllAudio() {\n        this._audioList.forEach((value, key) => {\n            if (null != this._titleID && this._titleID === value) {\n                // 题干语音播放完回调\n                ListenerManager.dispatch(FrameMsgType.COMPLETE_TRUMPET);\n            }\n            this._referenceList.set(key, 0);\n            cc.audioEngine.stopEffect(value);\n        });\n        this._audioList = new Map();\n        this._titleID = null;\n    }\n\n    // 停止音效\n    public stopAllEffect() {\n        this._effectList.forEach((value, key) => {\n            this._referenceList.set(key, 0);\n            cc.audioEngine.stopEffect(value);\n        });\n        this._effectList = new Map();\n    }\n\n    // 停止播放指定的音频通过名字\n    public stopSoundByName(clipName: string) {\n        this._referenceList.set(clipName, 0);\n        let id = this._audioList.get(clipName);\n        if (id != null && id != -1) {\n            cc.audioEngine.stop(id);\n            this._audioList.delete(clipName);\n        }\n        id = this._effectList.get(clipName);\n        if (id != null && id != -1) {\n            cc.audioEngine.stop(id);\n            this._effectList.delete(clipName);\n        }\n    }\n\n    // 停止正在播放的所有音频\n    public stopAll() {\n        this.stopAllAudio();\n        this.stopAllEffect();\n        cc.audioEngine.stopAll();\n    }\n\n    // 某个音效是否正在播放\n    public isPlaying(clipName: string): boolean {\n        let id = this._audioList.get(clipName);\n        if (id != null && id != -1) {\n            return true;\n        }\n        id = this._effectList.get(clipName);\n        if (id != null && id != -1) {\n            return true;\n        }\n        return false;\n    }\n}\n\nexport const SoundManager = SoundManagerClass.getInstance();\n"]}