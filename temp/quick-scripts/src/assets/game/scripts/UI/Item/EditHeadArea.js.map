{"version":3,"sources":["assets\\game\\scripts\\UI\\Item\\EditHeadArea.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA,qFAAoF;AACpF,mEAAkE;AAClE,kDAAiD;AACjD,uCAAkC;AAG5B,IAAA,KAAsB,EAAE,CAAC,UAAU,EAAlC,OAAO,aAAA,EAAE,QAAQ,cAAiB,CAAC;AAG1C;IAA0C,gCAAY;IAAtD;QAAA,qEAgCC;QA9BW,WAAK,GAAW,CAAC,CAAC;;IA8B9B,CAAC;IA5BG,6BAAM,GAAN;QACI,iCAAe,CAAC,EAAE,CAAC,qBAAS,CAAC,SAAS,EAAE,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC;IACnE,CAAC;IAED,gCAAS,GAAT;QACI,iCAAe,CAAC,GAAG,CAAC,qBAAS,CAAC,SAAS,EAAE,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC;IACpE,CAAC;IAEO,iCAAU,GAAlB,UAAmB,GAAY;QAC3B,IAAI,iBAAO,CAAC,SAAS,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,EAAE;YACzD,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,EAAE,CAAC,KAAK,CAAC,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;SAC/C;aAAM;YACH,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC;SACpC;IACL,CAAC;IAEM,kCAAW,GAAlB,UAAmB,GAAY;QAC3B,OAAO,iBAAO,CAAC,SAAS,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;IACnE,CAAC;IAEM,2BAAI,GAAX,UAAY,IAAa;QACrB,IAAI,IAAI,CAAC,IAAI,CAAC,aAAa,GAAG,CAAC,EAAE;YAC7B,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,kBAAQ,CAAC,CAAC,KAAK,EAAE,CAAC;SACxD;QACD,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC;QACjC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC;QACxB,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IAChC,CAAC;IA7BD;QADC,QAAQ,CAAC,EAAE,CAAC,OAAO,CAAC;+CACK;IAFT,YAAY;QADhC,OAAO;OACa,YAAY,CAgChC;IAAD,mBAAC;CAhCD,AAgCC,CAhCyC,EAAE,CAAC,SAAS,GAgCrD;kBAhCoB,YAAY","file":"","sourceRoot":"/","sourcesContent":["import { ListenerManager } from \"../../../../frame/scripts/Manager/ListenerManager\";\r\nimport { HitTest } from \"../../../../frame/scripts/Utils/HitTest\";\r\nimport { EventType } from \"../../Data/EventType\";\r\nimport DragHead from \"./DragHead\";\r\n\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class EditHeadArea extends cc.Component {\r\n    @property(cc.Integer)\r\n    private index: number = 0;\r\n\r\n    onLoad() {\r\n        ListenerManager.on(EventType.DRAG_HEAD, this.onDragHead, this);\r\n    }\r\n    \r\n    onDestroy() {\r\n        ListenerManager.off(EventType.DRAG_HEAD, this.onDragHead, this);\r\n    }\r\n\r\n    private onDragHead(pos: cc.Vec2) {\r\n        if (HitTest.posInRect(new cc.Vec2(pos.x, pos.y), this.node)) {\r\n            this.node.color = new cc.Color(255, 215, 0);\r\n        } else {\r\n            this.node.color = cc.Color.WHITE;\r\n        }\r\n    }\r\n\r\n    public isPosInRect(pos: cc.Vec2): boolean {\r\n        return HitTest.posInRect(new cc.Vec2(pos.x, pos.y), this.node);\r\n    }\r\n\r\n    public fill(item: cc.Node) {\r\n        if (this.node.childrenCount > 0) {\r\n            this.node.children[0].getComponent(DragHead).reset();\r\n        }\r\n        this.node.color = cc.Color.WHITE;\r\n        item.parent = this.node;\r\n        item.position = cc.v3(0, 0);\r\n    }\r\n}\r\n"]}