{"version":3,"sources":["assets\\frame\\scripts\\Manager\\UIManager.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import { BaseUI, UIClass } from '../UI/BaseUI';\n\nclass UIManagerClass {\n    private static _instance: UIManagerClass = null;\n    private uiList: BaseUI[] = [];\n    private uiRoot: cc.Node = null;\n    private stateList = new Object();\n    public isGameShowing: boolean = true;\n\n    public static getInstance(): UIManagerClass {\n        if (null === this._instance) {\n            this._instance = new UIManagerClass();\n        }\n        return this._instance;\n    }\n\n    constructor() {\n        // this.uiRoot = cc.find(\"Canvas\");\n    }\n\n    public loadUI<T extends BaseUI>(uiClass: UIClass<T>, callback?: Function, onProgress?: Function, ...args: any[]) {\n        return new Promise<cc.Prefab>((resolve, reject) => {\n            let progressFunc = (completedCount: number, totalCount: number, item: any) => {\n                if (onProgress) {\n                    onProgress(completedCount, totalCount, item);\n                }\n            };\n\n            let completeFunc = (error: Error, asset: cc.Prefab) => {\n                if (error) {\n                    cc.log(error);\n                    return reject(null);\n                }\n                if (callback) {\n                    callback(asset);\n                }\n                return resolve(asset);\n            };\n\n            if (uiClass.isFramePanel) {\n                cc.assetManager.loadBundle('frameRes', (err: Error, bundle: cc.AssetManager.Bundle) => {\n                    if (err) {\n                        cc.error(err);\n                        return reject(null);\n                    }\n                    bundle.load(uiClass.getUrl(), progressFunc, completeFunc);\n                });\n            } else {\n                cc.resources.load(uiClass.getUrl(), progressFunc, completeFunc);\n            }\n        });\n    }\n\n    public async openUI<T extends BaseUI>(\n        uiClass: UIClass<T>,\n        data?: any,\n        zOrder?: number,\n        callback?: Function,\n        onProgress?: Function,\n        ...args: any[]\n    ) {\n        if (!this.uiRoot) {\n            this.uiRoot = cc.find('Canvas');\n        }\n\n        if (this.getUI(uiClass)) {\n            return true;\n        }\n\n        this.stateList[uiClass.className] = true;\n\n        let prefab = await this.loadUI(uiClass, (asset: cc.Prefab) => {}, onProgress);\n        if (prefab) {\n            if (this.getUI(uiClass)) {\n                return true;\n            }\n            if (!this.stateList[uiClass.className]) {\n                return false;\n            }\n\n            let uiNode: cc.Node = cc.instantiate(prefab);\n            uiNode.parent = this.uiRoot;\n            if (zOrder) {\n                uiNode.zIndex = zOrder;\n            }\n            let ui = uiNode.getComponent(BaseUI);\n            ui.data = data;\n            ui.tag = uiClass;\n            this.uiList.push(ui);\n            if (callback) {\n                callback(args);\n            }\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    public closeUI<T extends BaseUI>(uiClass: UIClass<T>) {\n        this.stateList[uiClass.className] = false;\n        for (let i = 0; i < this.uiList.length; ++i) {\n            if (this.uiList[i].tag === uiClass) {\n                this.uiList[i].node.destroy();\n                this.uiList.splice(i, 1);\n                return;\n            }\n        }\n    }\n\n    public closeAllUI() {\n        for (let i = 0; i < this.uiList.length; ++i) {\n            let uiClass = this.uiList[i];\n            this.stateList[uiClass.name] = false;\n            uiClass.node.destroy();\n        }\n        this.uiList = [];\n    }\n\n    public async showUI<T extends BaseUI>(uiClass: UIClass<T>, data?: any, zOrder?: number, callback?: Function) {\n        let ui = this.getUI(uiClass);\n        if (ui) {\n            this.stateList[uiClass.className] = true;\n            ui.data = data;\n            ui.node.active = true;\n            ui.onShow();\n            if (callback) {\n                callback();\n            }\n            return true;\n        } else {\n            const isOpen = await this.openUI(uiClass, data, zOrder);\n            if (isOpen) {\n                callback && callback();\n                let ui = this.getUI(uiClass);\n                ui.onShow();\n            }\n            return isOpen;\n        }\n    }\n\n    public hideUI<T extends BaseUI>(uiClass: UIClass<T>) {\n        let ui = this.getUI(uiClass);\n        if (ui) {\n            this.stateList[uiClass.className] = false;\n            ui.node.active = false;\n        }\n    }\n\n    public getUI<T extends BaseUI>(uiClass: UIClass<T>): T {\n        for (let i = 0; i < this.uiList.length; ++i) {\n            if (this.uiList[i].tag === uiClass) {\n                return this.uiList[i] as T;\n            }\n        }\n        return null;\n    }\n\n    /**\n     * 动态加载并获取resources目录中的资源\n     * @param path resources下的资源路径\n     * @param type\n     * @param callback\n     * @returns asset\n     */\n    public getRes<T extends cc.Asset>(path: string, type: typeof cc.Asset, callback?: (asset: T) => void) {\n        return new Promise<T>((resolve, reject) => {\n            cc.resources.load(path, type, (error: Error, asset: T) => {\n                if (error) {\n                    cc.log(error);\n                    return reject(error);\n                } else {\n                    callback && callback(asset);\n                    return resolve(asset);\n                }\n            });\n        });\n    }\n\n    /**\n     * 动态加载并获取自定义bundle目录中的资源\n     * @param bundleName 自定义bundle名字\n     * @param path bundle下的资源路径\n     * @param type\n     * @param callback\n     * @returns asset\n     */\n    public getBundleRes<T extends cc.Asset>(\n        bundleName: string,\n        path: string,\n        type: typeof cc.Asset,\n        callback?: (asset: T) => void,\n    ) {\n        return new Promise<T>((resolve, reject) => {\n            cc.assetManager.loadBundle(bundleName, (err: Error, bundle: cc.AssetManager.Bundle) => {\n                if (err) {\n                    cc.error(err);\n                    return reject(err);\n                }\n                bundle.load(path, type, (error: Error, asset: T) => {\n                    if (error) {\n                        cc.log(error);\n                        return reject(error);\n                    } else {\n                        callback && callback(asset);\n                        return resolve(asset);\n                    }\n                });\n            });\n        });\n    }\n}\n\nexport const UIManager = UIManagerClass.getInstance();\n\nexport enum EPANEL_ZORDER {\n    NORMAL = 1, //游戏界面\n    POPUP = 10, //弹窗\n    MASK = 15, //遮罩\n    TIPS = 20, //提示框\n    ERROR = 30, //错误提示\n    SUBMISSION = 40, //提交答案\n}\n"]}