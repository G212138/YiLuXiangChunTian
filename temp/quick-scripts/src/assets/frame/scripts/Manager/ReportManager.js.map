{"version":3,"sources":["assets\\frame\\scripts\\Manager\\ReportManager.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import { ConstValue } from '../../../game/scripts/Data/ConstValue';\nimport { EditorManager } from '../../../game/scripts/Manager/EditorManager';\nimport GameMsg from '../SDK/GameMsg';\n\n/**\n * 作答数据管理类\n */\nclass ReportManagerClass {\n    public static _instance: ReportManagerClass = null;\n    public static getInstance() {\n        if (!this._instance) {\n            this._instance = new ReportManagerClass();\n        }\n        return this._instance;\n    }\n\n    /** 星级标准 */\n    public _startLevelConfig: number[] = [80, 50, 0];\n    /** ---------------------------必需参数--------------------------- */\n    public _type: string = 'txt';\n    public _result: Array<ExtraLevelData> = [];\n    // public _gameOver: GameOverData = null;\n    /** 第几次作答 */\n    public _playIndex: number = 0;\n\n    /** ---------------------------辅助参数--------------------------- */\n    /** 每关开始时间 */\n    public _levelStartTime: number = 0;\n\n    /** 每关作答耗时 */\n    public _coastTimeArr: number[] = [];\n    /** 添加 关/步骤 时间 */\n    public addCoastTime(tm: number) {\n        let time = tm - this._levelStartTime;\n        time = Math.ceil(time / 1000) * 1000; //时间取整\n        this._coastTimeArr[this._curLevelId] = time;\n    }\n    /** 获取总耗时 */\n    public getCoastTimes() {\n        return this._coastTimeArr;\n    }\n    public setCoastTimes(arr: number[]) {\n        this._coastTimeArr = arr;\n    }\n\n    /** 每关作答次数 */\n    public _tryCounts: number[] = [];\n    /** 获取总次数 */\n    public getTryCounts() {\n        return this._tryCounts;\n    }\n    public setTryCounts(arr: number[]) {\n        this._tryCounts = arr;\n    }\n\n    /** 实际作答正确次数 */\n    public _correctCounts: number[] = [];\n    public getCorrectCounts() {\n        return this._correctCounts;\n    }\n    public setCorrectCounts(arr: number[]) {\n        this._correctCounts = arr;\n    }\n\n    /** 每关作答状态 */\n    public _AnswerResults: AnswerResult[] = [];\n    /** 获取总次数 */\n    public getAnswerResults() {\n        return this._AnswerResults;\n    }\n    public setAnswerResults(arr: AnswerResult[]) {\n        this._AnswerResults = arr;\n    }\n    public setAnswerResultByLevel(level: number, answer: AnswerResult) {\n        this._AnswerResults[level] = answer;\n    }\n\n    /** 总关卡数目 */\n    public _levelCount: number = 0;\n\n    /** 当前关卡id  从0开始*/\n    public _curLevelId: number = 0;\n\n    /** 实际作答正确次数 */\n    // public _correctCount: number = 0;\n\n    /** 是否全部关卡通关 */\n    public isAllOver: boolean = false;\n\n    /** 是否整体未操作 */\n    // public _isUndo: boolean = true;\n\n    /**\n     * 是否 当前步骤/关卡 未操作，\n     * 只要用户有操作就修改此值\n     * */\n    // public _isCurLevelUndo: boolean = true;\n\n    /** 是否已经上报过game_over */\n    public _isReportedGameOver: boolean = false;\n\n    /** 需要判断正误的总步数 */\n    public _stepCount: number = 0;\n\n    /** 添加 关/步骤 次数 */\n    public addTryCount(bCorrect: boolean) {\n        if (this._tryCounts[this._curLevelId]) {\n            this._tryCounts[this._curLevelId] += 1;\n        } else {\n            this._tryCounts[this._curLevelId] = 1;\n        }\n\n        if (void 0 === this._correctCounts[this._curLevelId]) {\n            this._correctCounts[this._curLevelId] = 0;\n        }\n        if (bCorrect) {\n            this._correctCounts[this._curLevelId] += 1;\n        }\n    }\n\n    /**\n     * 初始化要上报的数据\n     *\n     * @param {number} levelCount 关卡总数\n     */\n    public initReportData(levelCount: number) {\n        this._playIndex = 1;\n        this._curLevelId = 0;\n        this.isAllOver = false;\n        this._isReportedGameOver = false;\n\n        this._levelCount = levelCount;\n        this._result = [];\n        for (let i = 0; i < this._levelCount; i++) {\n            let levelInfo = this._levelCount > 1 ? `${ConstValue.GameName}_第${i + 1}关` : ConstValue.GameName;\n            let _levelData = new ExtraLevelData();\n            _levelData.id = i + 1;\n            _levelData.question_info = levelInfo;\n            this._result.push(_levelData);\n        }\n        this._levelStartTime = Date.now();\n        this.setTryCounts([]);\n        this.setCorrectCounts([]);\n        this.setCoastTimes([]);\n        this.setAnswerResults([]);\n\n        if (EditorManager['getStepCount']) {\n            this._stepCount = EditorManager['getStepCount']();\n        } else {\n            this._stepCount = levelCount;\n        }\n        GameMsg.request_level_info({ levelCount: this._levelCount, curLevel: this._curLevelId + 1 });\n    }\n\n    /**\n     * 通关之后的重玩\n     *  只有外层index自增   其余数据恢复初始状态\n     *\n     * @memberof DataReportMgr\n     */\n    public replayGame() {\n        this._result = [];\n\n        ++this._playIndex;\n        this.isAllOver = false;\n        this._isReportedGameOver = false;\n        this._curLevelId = 0;\n        for (let i = 0; i < this._levelCount; i++) {\n            let levelInfo = this._levelCount > 1 ? `${ConstValue.GameName}_第${i + 1}关` : ConstValue.GameName;\n            let _levelData = new ExtraLevelData();\n            _levelData.id = i + 1;\n            _levelData.question_info = levelInfo;\n            this._result.push(_levelData);\n        }\n        this._levelStartTime = Date.now();\n        this.setTryCounts([]);\n        this.setCorrectCounts([]);\n        this.setCoastTimes([]);\n        this.setAnswerResults([]);\n        GameMsg.request_level_info({ levelCount: this._levelCount, curLevel: this._curLevelId + 1 });\n    }\n\n    // public setFirstTouch() {\n    //     this._isCurLevelUndo = false;\n    //     this._isUndo = false;\n    // }\n\n    /**\n     * 更新关卡作答数据\n     *\n     * @param {boolean} bCorrect 是否作答正确\n     * @param {boolean} bCurLevelFinish 当前关卡是否已完成 用于按步骤上报时状态设置为half，默认为true\n     */\n    public reportLevelResult(bCorrect: boolean, bCurLevelFinish: boolean = true) {\n        if (void 0 === this._result[this._curLevelId]) return;\n\n        let curTime = Date.now();\n        this.addCoastTime(curTime);\n        this.addTryCount(bCorrect);\n        let answerRes = AnswerResult.NoAnswer;\n        if (bCorrect) {\n            answerRes = bCurLevelFinish ? AnswerResult.AnswerRight : AnswerResult.AnswerHalf;\n        } else {\n            answerRes = AnswerResult.AnswerError;\n        }\n        this.setAnswerResultByLevel(this._curLevelId, answerRes);\n\n        let _reportData = this.getReportData();\n        _reportData.gameOver = null;\n        console.log(_reportData);\n        GameMsg.answerSyncSend(_reportData);\n\n        if (bCurLevelFinish) {\n            ++this._curLevelId;\n            this._levelStartTime = Date.now();\n            if (this._curLevelId === this._levelCount) {\n                this.isAllOver = true;\n                this.reportGameOver();\n            } else {\n                GameMsg.request_level_info({ levelCount: this._levelCount, curLevel: this._curLevelId + 1 });\n            }\n        }\n    }\n\n    /**\n     * 作答结束/端上收题 数据上报\n     *\n     * @memberof DataReportMgr\n     */\n    public reportGameOver() {\n        if (this._isReportedGameOver) {\n            return;\n        }\n\n        let _reporGameOvertData = this.getReportData();\n        console.log(_reporGameOvertData);\n        GameMsg.gameOver(_reporGameOvertData);\n        GameMsg.gameStatisticData(_reporGameOvertData.ext);\n\n        /** 上报game_over数据之后修改状态 */\n        this._isReportedGameOver = true;\n    }\n\n    /**\n     * 获取关卡数据\n     */\n    public getResultData(isExtra: boolean): LevelData[] | ExtraLevelData[] {\n        for (let i = 0; i < this._result.length; ++i) {\n            let levelData = this._result[i];\n            const levelIndex = levelData.id - 1;\n            const answerResult = this.getAnswerResults()[levelIndex] || AnswerResult.NoAnswer;\n            const answerNum = this.getTryCounts()[levelIndex] || 0;\n            const answerCorrect = this.getCorrectCounts()[levelIndex] || 0;\n            const answerWrong = answerNum - answerCorrect;\n            const answerTime = Math.ceil((this.getCoastTimes()[levelIndex] || 0) / 1000);\n            levelData.answer_res = answerResult;\n            levelData.answer_num = answerNum;\n            levelData.correct_num = answerCorrect;\n            levelData.wrong_num = answerWrong;\n            levelData.answer_time = answerTime;\n        }\n\n        if (isExtra) {\n            return this._result;\n        } else {\n            let result = [];\n            this._result.forEach((info) => {\n                let extraLevelData = new LevelData();\n                extraLevelData.id = info.id;\n                extraLevelData.question_info = info.question_info;\n                extraLevelData.answer_res = info.answer_res;\n                extraLevelData.answer_num = info.answer_num;\n                extraLevelData.answer_time = info.answer_time;\n\n                result.push(extraLevelData);\n            });\n\n            return result;\n        }\n    }\n\n    /**\n     * 获取gameOver数据\n     */\n    public getGameOverData(isExtra: boolean): GameOverData | ExtraGameOverData {\n        let totalTryCount = eval(this.getTryCounts().join('+'));\n        totalTryCount = totalTryCount ? totalTryCount : 0;\n        let totalCorrectCount = eval(this.getCorrectCounts().join('+'));\n        totalCorrectCount = totalCorrectCount ? totalCorrectCount : 0;\n        const totalWrongCount = totalTryCount - totalCorrectCount;\n        let totalTimes = eval(this.getCoastTimes().join('+'));\n        totalTimes = totalTimes ? totalTimes : 0;\n\n        let gameOver: GameOverData | ExtraGameOverData = null;\n        if (isExtra) {\n            gameOver = new ExtraGameOverData();\n            (gameOver as ExtraGameOverData).game_correct_num = totalCorrectCount;\n            (gameOver as ExtraGameOverData).game_wrong_num = totalWrongCount;\n            (gameOver as ExtraGameOverData).cur_level_id = Math.min(this._curLevelId + 1, this._levelCount);\n            (gameOver as ExtraGameOverData).total_level_num = this._levelCount;\n            (gameOver as ExtraGameOverData).star_num = this.getStarCount();\n            (gameOver as ExtraGameOverData).step_count = this._stepCount;\n        } else {\n            gameOver = new GameOverData();\n        }\n\n        gameOver.percentage = this.isAllOver ? Math.round((totalCorrectCount / totalTryCount) * 100) : 0;\n        gameOver.answer_all_time = Math.ceil(totalTimes / 1000);\n        gameOver.complete_degree = this.isAllOver ? 100 : Math.ceil((totalCorrectCount / this._stepCount) * 100);\n        gameOver.answer_all_state =\n            0 === totalTryCount\n                ? AnswerResult.NoAnswer\n                : this.isAllOver\n                ? AnswerResult.AnswerRight\n                : AnswerResult.AnswerHalf;\n\n        return gameOver;\n    }\n\n    public getExtraData(): ExtraData {\n        let extraData: ExtraData = new ExtraData();\n        extraData.type = this._type;\n        extraData.index = this._playIndex;\n        extraData.result = this.getResultData(true) as ExtraLevelData[];\n        extraData.gameOver = this.getGameOverData(true) as ExtraGameOverData;\n\n        return extraData;\n    }\n\n    public getReportData(): ReportData {\n        let reportData: ReportData = new ReportData();\n        reportData.type = this._type;\n        reportData.index = this._playIndex;\n        reportData.result = this.getResultData(false) as LevelData[];\n        reportData.gameOver = this.getGameOverData(false) as GameOverData;\n        reportData.ext = this.getExtraData();\n\n        return reportData;\n    }\n\n    /**\n     * 获取星数\n     */\n    public getStarCount() {\n        const gameOverData = this.getGameOverData(false);\n\n        let starCount = 0;\n        /** 计算星级 */\n        if (gameOverData.percentage >= this._startLevelConfig[0]) {\n            starCount = 3;\n        } else if (gameOverData.percentage >= this._startLevelConfig[1]) {\n            starCount = 2;\n        } else if (gameOverData.percentage > this._startLevelConfig[2]) {\n            starCount = 1;\n        } else {\n            starCount = 0;\n        }\n\n        return starCount;\n    }\n\n    /**\n     * 需要同步的数据\n     *\n     * @memberof DataReportMgr\n     */\n    public getSyncData() {\n        let _data = {\n            bReportedGameOver: this._isReportedGameOver, //是否已经上报过game_over\n            playCount: this._playIndex, //统计作答次数  以通关为维度\n            startTime: this._levelStartTime, //每关开始时间\n            coastTimes: this.getCoastTimes(), //每关作答耗时\n            tryCounts: this.getTryCounts(), //每关尝试次数\n            correctCounts: this.getCorrectCounts(), //每关作答正确次数\n            curLevelId: this._curLevelId, //当前关卡\n            bFinished: this.isAllOver,\n            answerResults: this.getAnswerResults(), //每关作答状态\n        };\n        return _data;\n    }\n\n    /**\n     * 设置接收到的作答状态到本地\n     *\n     * @param {*} data\n     * @memberof DataReportMgr\n     */\n    public setSyncData(data: any) {\n        this._isReportedGameOver = data.bReportedGameOver;\n        this._playIndex = data.playCount;\n        this._levelStartTime = data.startTime;\n        this.setCoastTimes(data.coastTimes);\n        this.setTryCounts(data.tryCounts);\n        this.setCorrectCounts(data.correctCounts);\n        this._curLevelId = data.curLevelId;\n        this.isAllOver = data.bFinished;\n        this.setAnswerResults(data.answerResults);\n\n        GameMsg.request_level_info({ levelCount: this._levelCount, curLevel: this._curLevelId + 1 });\n    }\n}\nexport const ReportManager = ReportManagerClass.getInstance();\n\nexport enum AnswerResult {\n    AnswerError = 'answer_error', //答错\n    AnswerRight = 'answer_right', //答对\n    AnswerHalf = 'answer_half', //未答完\n    NoAnswer = 'no_answer', //未作答\n}\n\n/**\n * 单关作答数据\n */\nexport class LevelData {\n    /** 关卡ID */\n    id: number = 0;\n    /** 题目信息 */\n    question_info: string = '';\n    /** 关卡作答结果  answer_error/answer_right/answer_half/no_answer */\n    answer_res: AnswerResult = AnswerResult.NoAnswer;\n    /** 关卡作答次数 */\n    answer_num: number = 0;\n    /** 关卡作答时间 */\n    answer_time: number = 0;\n}\n\n/**\n * 单关作答数据(额外上报)\n */\nexport class ExtraLevelData extends LevelData {\n    /** 关卡作答正确步数 */\n    correct_num: number = 0;\n    /** 关卡作答错误步数 */\n    wrong_num: number = 0;\n}\n\n/**\n * gameOver字段内容\n * 其中 percentage 字段在 未通关 的时候，数值为0\n */\nexport class GameOverData {\n    /** 正确率 */\n    percentage = 0;\n    /** 总作答状态 */\n    answer_all_state = AnswerResult.NoAnswer;\n    /** 总作答时间 */\n    answer_all_time = 0;\n    /** 完成度 */\n    complete_degree = 0;\n}\n\n/**\n * gameOver字段内容(额外上报)\n */\nexport class ExtraGameOverData extends GameOverData {\n    /** 总作答正确步数 */\n    game_correct_num: number = 0;\n    /** 总作答错误步数 */\n    game_wrong_num: number = 0;\n    /** 当前关卡id */\n    cur_level_id: number = 1;\n    /** 总关卡数 */\n    total_level_num: number = 0;\n    /** 星级 */\n    star_num: number = 0;\n    /** 总步数 */\n    step_count: number = 0;\n}\n\n/**\n * 额外数据上报\n * */\nexport class ExtraData {\n    /** 格式类型 */\n    type: string = 'txt';\n    /** 第几次作答 */\n    index: number = 1;\n    /** 关卡作答结果 */\n    result: ExtraLevelData[] = [];\n    /** gameOver数据 */\n    gameOver: ExtraGameOverData = new ExtraGameOverData();\n}\n\nexport class ReportData {\n    /** 格式类型 */\n    type: string = 'txt';\n    /** 第几次作答 */\n    index: number = 1;\n    /** 关卡作答结果 */\n    result: LevelData[] = [];\n    /** gameOver数据 */\n    gameOver: GameOverData = new GameOverData();\n    /** 额外数据上报 */\n    ext: ExtraData = new ExtraData();\n}\n"]}